name: postgrest-tutorial

services:
  tutorial-db:
    container_name: tutorial-db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_SCHEMA=${DB_SCHEMA}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_CONNECTION_ROLE=${DB_CONNECTION_ROLE}
      - DB_CONNECTION_ROLE_PASSWORD=${DB_CONNECTION_ROLE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./initdb:/docker-entrypoint-initdb.d"
      # Use this to persist data locally
      # - "tutorial_db_data:/var/lib/postgresql/data"
    networks:
      - tutorial-backend
    restart: "on-failure"

  postgrest:
    container_name: tutorial-postgrest
    image: postgrest/postgrest:latest
    depends_on:
      - tutorial-db
    ports:
      - "3000:3000"
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      - PGRST_DB_URI=postgres://${DB_CONNECTION_ROLE}:${DB_CONNECTION_ROLE_PASSWORD}@tutorial-db:5432/${POSTGRES_DB}
      # The name of which database schema to expose to REST clients
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      # The database role to use when no client authentication is provided
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      # Overrides the base URL used within the OpenAPI self-documentation hosted at the API root path
      # - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:3000
    networks:
      - tutorial-backend
    restart: "on-failure"

  # swagger-ui:
  #   container_name: tutorial-swagger-ui
  #   image: swaggerapi/swagger-ui:latest
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - API_URL=http://localhost:3000/
  #   restart: "on-failure"

  # Run a PGAdmin container to interact with the postgres DB in the browser
  # pgadmin:
  #   container_name: sandbox-pgadmin
  #   image: dpage/pgadmin4
  #   restart: "on-failure"
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
  #     - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
  #     - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
  #   ports:
  #     - '5050:5050'

networks:
  tutorial-backend:
    driver: bridge

# volumes:
#   tutorial_db_data:
#     driver: local